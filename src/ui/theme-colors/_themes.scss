@use "src/ui/theme-colors/dark";
@use "src/ui/theme-colors/light";
@use "sass:map";

@mixin style($theme) {

    .primary {
        color: map.get($theme, "on-primary");
        fill: map.get($theme, "on-primary");
        background-color: map.get($theme, "primary")
    }

    .secondary {
        color: map.get($theme, "on-secondary");
        fill: map.get($theme, "on-secondary");
        background-color: map.get($theme, "secondary");
    }

    .tertiary {
        color: map.get($theme, "on-tertiary");
        fill: map.get($theme, "on-tertiary");
        background-color: map.get($theme, "tertiary")
    }

    .surface{
        color: map.get($theme, "on-surface-variant");
        background-color: map.get($theme, "surface-container");
    }
    
    .background {
        color: map.get($theme, "on-background");
        background-color: map.get($theme, "background");
    }

    .shadow-b {
        box-shadow: 0px 4px 13px -10px map.get($theme, "shadow");
    }

    .shadow-r {
        box-shadow: -3px -3px 13px map.get($theme, "shadow");
    }

    .shadow-l {
        box-shadow: 5px 5px 13px map.get($theme, "shadow");
    }

    .headerIconLogoColors {
        stroke: map.get($theme, "primary");
    }

    .headerToCodeLogoColors {
        color: map.get($theme, "secondary");
    }

    .headerCafeLogoColors {
        color: map.get($theme, "primary");
    }

    .footerIconLogoColors {
        stroke: map.get($theme, "on-surface-variant"); 
    }

    .footerToCodeLogoColors {
        color: map.get($theme, "on-surface-variant");
    }

    .footerCafeLogoColors {
        color: map.get($theme, "on-surface-variant");
    }

    .themeLink {        
        color: map.get($theme, "on-surface-variant");       
    }
}

.mainContent[data-theme="light"] {
    @include style(light.$light-theme);
}

.mainContent[data-theme="dark"] {
    @include style(dark.$dark-theme);
}